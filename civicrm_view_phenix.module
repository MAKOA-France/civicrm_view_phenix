<?php

use Drupal\block\BlockInterface;
use Drupal\civicrm_view_phenix\ViewService;
use Drupal\Core\Access\AccessResult;
use Drupal\Core\Session\AccountInterface;
use Drupal\node\Entity\Node;
use Drupal\node\NodeInterface;
use Drupal\views\Views;
use Drupal\webprofiler\Views\ViewExecutableFactoryWrapper;
use GuzzleHttp\Psr7\Request;
use Drupal\taxonomy\TermInterface;
use Drupal\Core\Url;




function civicrm_view_phenix_preprocess_views_view_field(&$variables) {

  $view = $variables['view'];
  $field = $variables['field'];
  $requests = \Drupal::request();
  $row = $variables['row'];
  $custom_service = \Drupal::service('civicrm_view_phenix.view_services');
  $custom_query_service = \Drupal::service('civicrm_view_phenix.view_query_services');

  if ($view->storage->id() == 'publicite' &&  $view->current_display == 'publicite_guide_en_hauteur') {
    if ($field->field == 'field_media_image') {
      $current_output = $variables['output']->__toString();
      $alt = $row->_entity->get('field_media_image')->getValue()[0]['alt'];
      if ($alt) {
        $variables['output'] = ['#markup' => '<a target="__blank" href="'  . $alt . '">' . $current_output . '</a>'];
      }
    }
  }

  //Personnalisation de l'affichage de la publicité verticale (node publicité)
  if ($view->storage->id() == 'publicite_node' &&  $view->current_display == 'block_1') {
    if ($field->field == 'field_publicite') {
      $current_output = $variables['output']->__toString();

      //Get random pub
      $pub_img = $custom_query_service->getRandomPubVertical()['pub_img'];
      $pub_url = $custom_query_service->getRandomPubVertical()['pub_url'];

      $pub_link = $row->_entity->get('field_lien_de_la_pu')->getValue()[0]['uri'];
      // if ($pub_link) {
        $variables['output'] = ['#markup' => '<a target="__blank" href="'  . $pub_url . '">' . $pub_img . '</a>'];
      // }
    }
  }

  //Label SE alter phone display
  $white_list_view_display = ['page_10_grue_tour' , 'page_11_labelse', 'page_7_reparation', 'page_1', 'page_2', 'liste_carte', 'page_5'];
  if ($view->storage->id() == 'location_occasion_membres_associes_' &&  in_array($view->current_display,  $white_list_view_display)) {
    if ($field->field == 'phone_numeric') {
      //Condition for membre associe logo
      $is_membre_associe = $custom_query_service->isContactMemberAssocie ($row->id);
      $img_membre_associe = '';
      if ($is_membre_associe) {
        $img_membre_associe = '<img class="img-membre-associe" src="/files/styles/thumbnail/public/2022-07/logoMA.png?itok=vURbgtIU">';
      }
      $value = $field->getValue($row);
      $formatted = implode(' ',str_split($value, 2));
      $html_phone = ['#markup' => '<span class="content-fiche"> <span class="phone-number-col"> ' . $formatted  . '</span>'. $img_membre_associe . ' &nbsp;'];
      $variables['output'] = $html_phone;
    }
  }

  $all_white_list_page = ['page_5', 'page_2', 'page_1', 'page_7_reparation', 'page_10_grue_tour', 'page_11_labelse', 'block_membres_associes'];

  //All pages
  if ($view->storage->id() == 'location_occasion_membres_associes_' && in_array($view->current_display, $all_white_list_page)) {

    if ($field->field == 'organization_name' || $field->field == 'legal_name') {
      $current_company_id = $variables['row']->id;
      $get_contact_type =  \Drupal::service('civicrm_view_phenix.view_services')->getContactTypeById ($current_company_id);
      $font_awesome_html = '';


      $agence_icon = '<i class=\'far fa-building ssssh pr-12 \'></i>';

      $cible_icon = '<i class=\'fas fa-city ' . $current_company_id . '  pr-8 \'></i>';

      $get_contact_type = $get_contact_type[0];
      $get_contact_type = str_replace("\x01", "", $get_contact_type);

      if (!empty($get_contact_type)) {
        $isCible = $get_contact_type == 'Cible';
        $font_awesome_html = $isCible ? $cible_icon : $agence_icon;
      }

      $value = $field->getValue($row);

      
      $current_value_name = is_string($variables['output']) ? $variables['output'] :  $variables['output']->__toString();
      
        // Check if the client's IP address matches your IP address

      if (!$current_value_name) {
        $contacts = \Civi\Api4\Contact::get(FALSE)
          ->addSelect('display_name', 'organization_name')
          ->addWhere('id', '=', $current_company_id)
          ->execute()->first();
          
        if ($contacts) {
          $name = $contacts['display_name'] ? $contacts['display_name'] : $contacts['organization_name'];
            $current_value_name = '<a href="/annuaire/details" class="compagny_name">' . $name . '</a>';
        }
      }

      //Override link
      if (!empty($get_contact_type)) {
        $isCible = $get_contact_type == 'Cible';
        $font_awesome_html = $isCible ? $cible_icon : $agence_icon;

        $isAgence = $get_contact_type == 'Agence';
        $value = $field->getValue($row);
        
  
        $current_value_name = is_string($variables['output']) ? $variables['output'] :  $variables['output']->__toString();

        if (!$current_value_name) {
          $contacts = \Civi\Api4\Contact::get(FALSE)
            ->addSelect('display_name', 'organization_name')
            ->addWhere('id', '=', $current_company_id)
            ->execute()->first();
          
          if ($contacts) {
            $name = $contacts['display_name'] ? $contacts['display_name'] : $contacts['organization_name'];
            $current_value_name = '<a href="/annuaire/details" class="compagny_name">' . $name . '</a>';
          }
        }

      }

      if ($isCible) {
        $addresseId = \Drupal::database()->query('select id from civicrm_address where contact_id = '. $current_company_id)->fetchCol()[0];
        $previous_value = $matches[0];

        //en mode anonyme on n'a pas l'identifiant au niveau de l'url donc on l'ajoute
        if (!preg_match('/\/annuaire\/details\/[0-9]+/', $current_value_name)) {
          $current_value_name = preg_replace("/\/annuaire\/details/", "/annuaire/details/" . $current_company_id, $current_value_name);
        }
        $encryptedID = $custom_service->encryptString($current_company_id);
        $current_value_name = str_replace($current_company_id, $idCibleLinkedWithThisAgence[0] . $current_company_id . '?addressId=' . $addresseId. '&token=' . $encryptedID, $current_value_name);
      }


     
      $variables['output'] = ['#markup' => '<span class="content-fiche">  ' . $font_awesome_html . $current_value_name . ' &nbsp;'];
    }
  }

  /*  Modification de la vue page géographique, pour ajouter les icones
   *  Et ajout du bon lien 
   */
  if ($view->storage->id() == 'location_occasion_membres_associes_' && $view->current_display == 'liste_carte') {
    if ($field->field == 'organization_name' || $field->field == 'legal_name' ) {
      $current_company_id = $variables['row']->id;
      $get_contact_type =  \Drupal::service('civicrm_view_phenix.view_services')->getContactTypeById ($current_company_id);
      $font_awesome_html = '';

      $agence_icon = '<i class=\'far fa-building pr-12 \'></i>';

      $cible_icon = '<i class=\'fas fa-city pr-8 \'></i>';

      $get_contact_type = $get_contact_type[0];
      $get_contact_type = str_replace("\x01", "", $get_contact_type);


      if (!empty($get_contact_type)) {
        $isCible = $get_contact_type == 'Cible';
        $font_awesome_html = $isCible ? $cible_icon : $agence_icon;
      }

      $value = $field->getValue($row);
      $current_value_name = is_string($variables['output']) ? $variables['output'] : $variables['output']->__toString();

      //Override link
      if (!empty($get_contact_type)) {
        $isCible = $get_contact_type == 'Cible';
        $font_awesome_html = $isCible ? $cible_icon : $agence_icon;

        $isAgence = $get_contact_type == 'Agence';
        $value = $field->getValue($row);
        $current_value_name = is_string($variables['output']) ? $variables['output'] : $variables['output']->__toString();


        //If legal_name is empty we get organization_name
        if (!$variables['output']) {
          $organization_name_label = $custom_query_service->getContactOrganizationName($current_company_id);
          $current_value_name = '<a href="/annuaire/details/' . $current_company_id . '" class="compagny_name">' . $organization_name_label . '</a>';
        }


         if ($isAgence) {
          //Override link
          $idCibleLinkedWithThisAgence = $custom_service->getCompanyCibleByAgenceId($current_company_id);
          //regex

          preg_match('/annuaire\/details\/[0-9]+/', $current_value_name, $matches);

          if (!empty($matches) && $idCibleLinkedWithThisAgence) {
            $addresseId = \Drupal::database()->query('select id from civicrm_address where contact_id = '. $current_company_id)->fetchCol()[0];
            $previous_value = $matches[0];
            $encrypted_id = $custom_service->encryptString($current_company_id);
            $current_value_name = str_replace($current_company_id, $idCibleLinkedWithThisAgence[0] . '?agenceId=' . $addresseId . '&token=' . $encrypted_id, $current_value_name);
         }
        }else {

           //regex  refactoring
           preg_match('/annuaire\/details\/[0-9]+/', $current_value_name, $matches);
           $encrypted_id = $custom_service->encryptString($current_company_id);
           if (!empty($matches)) {
            $addresseId = \Drupal::database()->query('select id from civicrm_address where contact_id = '. $current_company_id)->fetchCol()[0];

            $current_value_name = str_replace($current_company_id, $idCibleLinkedWithThisAgence[0] . $current_company_id . '?addressId=' . $addresseId. '&token=' . $encrypted_id, $current_value_name);

          }
        }


        $variables['output'] = ['#markup' => '<span class="content-fiche">  ' . $font_awesome_html . $current_value_name . ' &nbsp;'];
      }

      $variables['output'] = ['#markup' => '<span class="content-fiche">  ' . $font_awesome_html . $current_value_name . ' &nbsp;'];
      //$variables['output']
    }
  }

  if ($view->storage->id() != 'publicite') {

    //dump($view->storage->id());
  }
  if ($view->storage->id() == 'fiche' &&
  $view->current_display == 'page_2') {

  if ($field->field == 'legal_name') {
    
    $get_parameter_agence = $requests->get('agenceId');
    if($get_parameter_agence) {
      $contact_id = $custom_query_service->getContactIdByAdresseId ($get_parameter_agence);
      $all_agence_info = $custom_query_service->getAllAgenceInfoByAdressId($get_parameter_agence);
      $street_address = $all_agence_info["all_address"]["street_address"];
      $postal_code = $all_agence_info["all_address"]["postal_code"];
      $city = $all_agence_info["all_address"]["city"];

      $info_email = $all_agence_info['email'];
      $info_phone = $all_agence_info['phone'];


      $html_phone = $info_phone ? '<div class="d-flex phone-agence-info"><strong class="title-fiche">Téléphone : </strong><p class="content-fiche telephone-view"><span class="content-fiche pt-0  mb-0">' . $info_phone . ' &nbsp;</span></p></div>
      ' : '';

      $html_mail = $info_email ? '<div class="d-flex phone-agence-info email"><strong class="title-fiche">Email : </strong><p class="content-fiche telephone-view"><span class="content-fiche pt-0  mb-0">' . $info_email . ' &nbsp;</span></p></div>
      ' : '';

      $html_agence_info = '<div class="contact-agence-info">
       <p class="agence-siege">Agence :</p>
      <p class="content-fiche  mb-0">' . $street_address . '</p>
      <span class="content-fiche  mb-0">' . $postal_code . '</span>
      <span class="content-fiche  mb-0">' . $city . '</span>

      ' . $html_phone . '
      ' . $html_mail . '

      </div>
      <p class="agence-siege">Siège :</p>
      ';
    }

    $valueLegalName = $field->getValue($row);
    $valueLegalName = $valueLegalName ? $valueLegalName :  $row->_entity->get('display_name')->getValue()[0]['value'];
    $variables['output'] = ['#markup' => '
    <div class="legal-name"> <p class="field-content fiche-legal-name"> ' . $valueLegalName . '</p></div>' . $html_agence_info];
  }

  if ($field->field == 'url') {
    $variables['output'] = '';

    $company_id = $view->result[0]->id;

    $database = \Drupal::database();
    $query = $database->query('select * from civicrm_value_phx_Individual_contact_fonction where contact_fonction_entreprise = ' . $company_id);
    $indiviualContactFonctions = $query->fetch();
    $travail_site_web =  $custom_service->getWebsiteApiV4ById($company_id);
    if ($indiviualContactFonctions || $travail_site_web) {

      $dirigeant_id = $indiviualContactFonctions->entity_id;

      //Site web & dirigeant
      $value = $field->getValue($row);

      $dirigeant_name_1 = '';
      $dirigeant_name_2 = '';

      $allContactsLinkedWithCompany = \Civi\Api4\Relationship::get(FALSE)
        ->addSelect('contact_id_a')
        ->addWhere('contact_id_b', '=', $company_id)
        ->execute()->column('contact_id_a');

      if ($allContactsLinkedWithCompany) {
        foreach ($allContactsLinkedWithCompany as $contactLinkedWithCompany) {
          $function = \Civi\Api4\Contact::get(FALSE)
          ->addSelect('indiviual_contact_fonction.fonction:label')
          ->addWhere('id', '=', $contactLinkedWithCompany)
          ->execute();
        $current_function_val = $function->first();
        $current_function = $current_function_val['indiviual_contact_fonction.fonction:label'];
        if ($current_function) {
          $contact_function = reset($current_function);

          //Dirigeant 1
          if ($contact_function == 'Dirigeant 1') {
            //check if dirigeant is visible or not
            $is_dirigeant_visible = reset($custom_service->isDirigeantVisible ($contactLinkedWithCompany));

            //also check if dirigeant is in the recyle bin,  deleted
            $is_contact_deleted = $custom_query_service->isContactDeleted ($contactLinkedWithCompany);
            if ($is_dirigeant_visible && (!$is_contact_deleted)) {
              $dirigeant_name_1 = $custom_service->getContactNameById($contactLinkedWithCompany);
              $dirigeant_name_1 = $dirigeant_name_1['display_name'];
            }
          }
          //Dirigeant 2
          if ($contact_function == 'Dirigeant 2') {
            $is_contact_deleted = $custom_query_service->isContactDeleted ($contactLinkedWithCompany);
            if ($is_dirigeant_visible && (!$is_contact_deleted)) {
              $is_dirigeant_visible = reset($custom_service->isDirigeantVisible ($contactLinkedWithCompany));
              $dirigeant_name_2 = $custom_service->getContactNameById($contactLinkedWithCompany);
              $dirigeant_name_2 = $dirigeant_name_2['display_name'];
            }
          }
        }
      }
    }

      //check if the company is French
      $companyISinFrance = false;
      $isInFrance = \Civi\Api4\Address::get(FALSE)
      ->addSelect('country_id', 'country_id:label')
      ->addWhere('contact_id', '=', $company_id)
      ->execute();
      if ($isInFrance->first()['country_id'] == 1076) {
        $companyISinFrance = true;
      }

      //load map view
      $custom_class = $companyISinFrance ? 'this-country-is-french' : '';
      $view = views_embed_view('entreprise_localisation', 'block_5');
      $hasLatitudeAndLongitude = $custom_service->checkIfCompanyHasLatAndLongitude($company_id);//don't display map if there is no marker
      $view['#attributes']['class'][] = 'custom-view-embeded-map';
      $view['#attributes']['class'][] = $custom_class;
      $view['#arguments'][0] = $company_id;
      $view_rendered = $hasLatitudeAndLongitude ? \Drupal::service('renderer')->render($view) : '';

      $all_agences = $custom_service->getAgenceLinkedWithCompany($company_id);
      $all_agences = $all_agences['values'];
      if (!empty($all_agences)) {
        $all_agences_ids = array_column($all_agences, 'contact_id_a');
        //Gel all lat/long
        $all_lat_long_result = \Civi\Api4\Address::get(FALSE)
          ->addSelect('geo_code_1', 'geo_code_2')
          ->addWhere('contact_id', 'IN', $all_agences_ids)
          ->execute();

        $total_result = $all_lat_long_result->count();

        $all_agences_lat = $all_lat_long_result->column('geo_code_1');
        $all_agences_lat[] = $custom_service->getLatitude($company_id)->first()['geo_code_1'];//add master Company too
        $all_agences_lon = $all_lat_long_result->column('geo_code_2');
        $all_agences_lon[] = $custom_service->getLongitude($company_id)->first()['geo_code_2'];//add master Company too
      }else {
        $all_agences_lat[] = $custom_service->getLatitude($company_id)->first()['geo_code_1'];//add master Company too
        $all_agences_lon[] = $custom_service->getLongitude($company_id)->first()['geo_code_2'];//add master Company too
      }

      $avg_lat = array_filter($all_agences_lat);
      $average_lat = array_sum($avg_lat)/count($avg_lat);
      $average_lat = json_encode($average_lat);

      $avg_lon = array_filter($all_agences_lon);
      $average_lon = array_sum($avg_lon)/count($avg_lon);
      $average_lon = json_encode($average_lon);

      $dirigeant_2_html = $dirigeant_name_2 ? ' et ' . $dirigeant_name_2  : '';

      $value =  $value ? $value : $custom_service->getWebsiteApiV4ById($company_id);

      $value = $value ? '<strong class="views-label views-label-url title-fiche">Site web : </strong>
      <p class="field-content website-value content-fiche pt-0"><a target="_blank" href="' . $value . '"> ' . $value . ' </a></p>' : '';

      $isPlural = $dirigeant_name_2 ? 's' : '';

      $dirigeant_1_html = $dirigeant_name_1 ? ' <strong class="views-label views-label-url title-fiche dirigeant-value">Dirigeant' . $isPlural  . ' : </strong>    <p class="field-content content-fiche dirigeant-name  pt-0"> ' . $dirigeant_name_1 . $dirigeant_2_html . '</p>' : '';

   

      $markup = [
        '#type' => 'inline_template',
        '#template' => '{{ yourvar }} {{ yourhtml | raw }}',
        '#context' => [
          'yourhtml' =>   '

          <div data-latitude="' . $average_lat . '" data-longitude="' .  $average_lon . '" data-total-result="' . $total_result . '" class="views-field views-field-url d-flex">
          ' . $value . '
          </div>

          <div class="views-field views-field-url d-flex">

          ' . $dirigeant_1_html .  '

          </div>
          '  ,
        ],
      ];
      $variables['output'] = $markup;

    }
  }

  //condition for city field
  if ($field->field == 'field_video_guide') {
    if ($variables['output']) {

      $current_output = $variables['output']->__toString();
    }
    $curr_id = $view->result[0]->id;
    $view = views_embed_view('entreprise_localisation', 'block_5');
    $hasLatitudeAndLongitude = $custom_service->checkIfCompanyHasLatAndLongitude($curr_id);//don't display map if there is no marker
    $view['#attributes']['class'][] = 'custom-view-embeded-map';
    $view['#attributes']['class'][] = $custom_class;
    $view_rendered = $hasLatitudeAndLongitude ? \Drupal::service('renderer')->render($view) : '';
    $add_or_edit = $current_output ? 'Modifier la vidéo' : 'Ajouter une video';
    $checksum = $custom_service->getChecksumById($curr_id);

    // si le output ne contient pas de balize <iframe on le recupere depuis la base peut etre

    $btn_add_video = '<a href="/form/formulaire-pour-adherent?cid=' . $curr_id . '&cs=' . $checksum . '" class="button js-form-submit form-submit">' . $add_or_edit . '</a>';

    //Recuperer le curr id
    //recuperer le checksum
    //former l'url d'ajout video
    // Load the media entity using the URL.

    //seul les permanents, SU et Admin clients peuvent voir le bouton
    $current_user = \Drupal::currentUser();
    $user_roles = $current_user->getRoles();
    $bnt_add_video = '<div class="btn-add-video"> ' . $btn_add_video . ' </div>';
    if ((!in_array('super_utilisateur', $user_roles) && !in_array('admin_client', $user_roles) && !in_array('permanent', $user_roles) && !in_array('administrator', $user_roles))) {
      $bnt_add_video = '';
    }

    $markup = [
      '#type' => 'inline_template',
      '#template' => '{{ yourvar }} {{ yourhtml | raw }}',
      '#context' => [
        'yourhtml' => $bnt_add_video . '<div class="cvideo">' . $current_output  . '</div><div class="cmap">' .  $view_rendered . '</div>',
      ],
    ];
      $variables['output'] =$markup;
    }


  //condition for city field
   if ($field->field == 'city') {
      $value = $field->getValue($row);
      $variables['output'] = ['#markup' => '<span class="content-fiche">' . $value . ' &nbsp;'];
  }

   //condition for email field
  if ($field->field == 'email') {
    $value = $field->getValue($row);
    if ($value) {
      $variables['output'] = ['#markup' => '<strong class="views-label views-label-email-1 title-fiche email-label">Email : </strong> <p class="content-fiche email-value pt-0 mb-0">' . $value . ' &nbsp;</p>'];
    }
  }

   //condition for street address field
  if ($field->field == 'street_address') {
    $value = $field->getValue($row);
    $variables['output'] = ['#markup' => ' <p style="margin-bottom:0;" class="content-fiche  mb-0">' . $value . ' &nbsp;</p>'];
  }

   //condition for country field
  if ($field->field == 'country_id') {
    $value = $field->getValue($row);
    if ($value == '1076') {//this means that if the country is 'France' we hide it
      $variables['output'] = ['#markup' => ' '];
    }
  }

  //condition for postal code field
  if ($field->field == 'postal_code') {
    $value = $field->getValue($row);
    $variables['output'] = ['#markup' => '<span class="content-fiche  mb-0">' . $value . ' &nbsp;</span>'];
  }

  //condition for phone field
  if ($field->field == 'phone_numeric') {
    $value = $field->getValue($row);
    $formatted = implode(' ',str_split($value, 2));
    $variables['output'] = ['#markup' => '<span class="content-fiche pt-0  mb-0">' . $formatted . ' &nbsp;</span>'];
  }

  $custom_service->alterViewFieldRender ($field, 'supplemental_address_1', $variables);
  $custom_service->alterViewFieldRender ($field, 'supplemental_address_2', $variables);
  $custom_service->alterViewFieldRender ($field, 'supplemental_address_3', $variables);
  }
}


/**
 * Implements hook_views_query_alter().
 */
function civicrm_view_phenix_views_query_alter(\Drupal\views\ViewExecutable $view, \Drupal\views\Plugin\views\query\QueryPluginBase $query) {

  $request = Drupal::request();
  $custom_service = \Drupal::service('civicrm_view_phenix.view_services');
  $custom_query_service = \Drupal::service('civicrm_view_phenix.view_query_services');


  //Filter All view except alphabetic && Geographic
  $white_list_for = [/*'page_2' , 'page_1' , */'page_7_reparation', 'page_10_grue_tour'/* , 'page_11_labelse' , 'block_membres_associes'*/];
  if ($view->storage->get('id') == 'location_occasion_membres_associes_' && in_array($view->current_display, $white_list_for)) {
    //alter query champ Annuaire en ligne = OUI  Pour les organisations
    $custom_service->joinTable($query, 'civicrm_contact', 'civicrm_value_phx_org_annuaireenligne', 'civicrm_value_phx_org_annuaireenligne', 'entity_id', 'id');
    $custom_service->joinTable($query, 'civicrm_contact', 'civicrm_membership', 'civicrm_membership', 'contact_id', 'id') ;

    $custom_service->addWhereQuery ($query, 1, 'civicrm_value_phx_org_annuaireenligne', 'org_annuaireenligne_DLR', '='); //Annuaire en ligne
    if (($view->current_display != 'block_membres_associes')) {
      $custom_service->addWhereQuery ($query,   [1/* , 2, 3, 4 */], 'civicrm_membership', 'membership_type_id', 'IN'); //filter CIBLES  by membership  --> statut IN [en instance, courant, nouveau, délai de grace]
    }
    $custom_service->addWhereQuery ($query, 0, 'civicrm_contact', 'is_deleted', '=');
    $custom_service->addWhereQuery ($query, 'Organization', 'civicrm_contact', 'contact_type', '='); //contact type organization
    if ($view->current_display != 'block_membres_associes') {
      // $custom_service->addWhereQuery ($query, '1', 'contact_id_civicrm_contact_1', 'is_primary', '='); //telephone principale
    }
    // $custom_service->addWhereQuery ($query, '1', 'contact_id_civicrm_contact', 'is_primary', '='); //adresse principal
    //$custom_service->addWhereQuery ($query, '', 'contact_id_civicrm_contact', 'geo_code_1', 'IS NOT NULL');  //latitude is not null
    // $custom_service->addWhereQuery ($query, '', 'contact_id_civicrm_contact', 'city', 'IS NOT NULL'); // Ville pas vide
    // $custom_service->addWhereQuery ($query, '', 'contact_id_civicrm_contact', 'postal_code', '!='); // Code postal pas vide
    $custom_service->addWhereQuery ($query, 'Cible', 'civicrm_contact', 'contact_sub_type', '='); //Contact de type Cible


    $contacts_who_are_in_dynamic_group = \Civi\Api4\Contact::get(FALSE)
    ->addSelect('id')
    ->addWhere('groups', 'IN', [ViewService::GROUP_ID_MEMBRE_ACTUEL_POUR_LES_CIBLES_SEULEMENT])
    ->execute()->column('id');


    if ($contacts_who_are_in_dynamic_group) {
      $custom_service->addWhereQuery ($query,   $contacts_who_are_in_dynamic_group, 'civicrm_contact  ', 'id', 'IN');  //Contact Cible membre dans le group dynamique
    }

    //sorting
    $custom_query_service->orderBy ($query, 'civicrm_contact.organization_name', 'ASC', 2);


    $column_to_be_filtered = '';
    switch ($view->current_display) {
      case 'page_7_reparation': //Page Réparation
      $column_to_be_filtered = 'phx_secteur_reparateur';//Secteur Réparateur In Oui
      break;
      case 'page_1': //Page Location
      $column_to_be_filtered = 'phx_secteur_loueur';//Secteur Loueur In Oui
      break;
      /* case 'page_2': //Page Vente
        $custom_service->joinTable($query, 'civicrm_contact', 'civicrm_value_phx_secteur', 'civicrm_value_phx_secteur', 'entity_id', 'id') ;
        $query->where[] =  [
          'conditions' => [
              [
              'field' => 'civicrm_value_phx_secteur.phx_secteur_occasion',
              'value' => '1',
              'operator' => '=',
              ],
            [
              'field' => 'civicrm_value_phx_secteur.phx_secteur_distributeur',
              'value' => '1',
              'operator' => '=',
            ],
          ],
          'type' => 'OR',
        ];

      break; */
    }

    if ($column_to_be_filtered) {
      $custom_service->joinTable($query, 'civicrm_contact', 'civicrm_value_phx_secteur', 'civicrm_value_phx_secteur', 'entity_id', 'id') ;
      $custom_service->addWhereQuery ($query, '1', 'civicrm_value_phx_secteur', $column_to_be_filtered, '=');
    }

    //Page Grue à tour
    if ($view->current_display == 'page_10_grue_tour') {
      $custom_service->joinTable($query, 'civicrm_contact', 'civicrm_value_phx_materiel', 'civicrm_value_phx_materiel', 'entity_id', 'id') ;
      $custom_service->addWhereQuery ($query, '%13%', 'civicrm_value_phx_materiel', 'materiel_location', 'LIKE');
    }

   /*  //Page Label SE
    if ($view->current_display == 'page_11_labelse') {
      $custom_service->joinTable($query, 'civicrm_contact', 'civicrm_value_phx_certification', 'civicrm_value_phx_certification', 'entity_id', 'id') ;
      $custom_service->addWhereQuery ($query,   [1], 'civicrm_membership', 'membership_type_id', 'IN');
      $custom_service->addWhereQuery ($query, 6, 'civicrm_value_phx_certification', 'nom_certification', '='); //filtrer seulement les entreprises certifications = SE+)
    } */

  }

  //Page Membres associés
  if ($view->current_display == 'block_membres_associes') {
    $ids = $custom_service->getContactMembreAssocie();
    $custom_service->addWhereQuery ($query,  $ids , 'civicrm_contact', 'id', 'IN');
    $custom_query_service->orderBy ($query, 'civicrm_contact.organization_name', 'ASC', 2);
  }

  //Page vente
  if ($view->storage->get('id') == 'location_occasion_membres_associes_' && $view->current_display == 'page_2') {
    $ids = $custom_service->getContactVente();
    $custom_service->addWhereQuery ($query,  $ids , 'civicrm_contact', 'id', 'IN');
    $custom_query_service->orderBy ($query, 'civicrm_contact.organization_name', 'ASC', 2);
  }

  if ($view->storage->get('id') == 'location_occasion_membres_associes_' && $view->current_display == 'page_1') {
    $contacts_who_are_in_dynamic_group = $custom_service->getContactLocation();

   if ($contacts_who_are_in_dynamic_group) {
     $custom_service->addWhereQuery ($query,   $contacts_who_are_in_dynamic_group, 'civicrm_contact  ', 'id', 'IN');  //Contact Cible membre dans le group dynamique
   }

   $custom_query_service->orderBy ($query, 'civicrm_contact.organization_name', 'ASC', 2);

  }

  //Page Label SE
  if ($view->current_display == 'page_11_labelse') {

    $contacts_labelse = \Civi\Api4\Contact::get(FALSE)
    ->addSelect('id')
    ->addJoin('Membership AS membership', 'LEFT')
    ->addJoin('Custom_Certifications AS custom_certifications', 'LEFT')
    ->addWhere('membership.membership_type_id', '=', 1)
    ->addWhere('contact_type', '=', 'Organization')
    ->addWhere('contact_sub_type', '=', 'Cible')
    ->addWhere('is_deleted', '=', FALSE)
    ->addWhere('membership.status_id', 'IN', [1, 2, 3, 5])
    ->addWhere('org_annuaireenligne.annuaireenligne_DLR', '=', 1)
    ->addWhere('custom_certifications.nom_certification','IN', [5, 6])
    ->execute()->column('id');
    // $custom_service->joinTable($query, 'civicrm_contact', 'civicrm_value_phx_certification', 'civicrm_value_phx_certification', 'entity_id', 'id') ;
    // $custom_service->addWhereQuery ($query,   [1], 'civicrm_membership', 'membership_type_id', 'IN');
    // $custom_service->addWhereQuery ($query, [5, 6], 'civicrm_value_phx_certification', 'nom_certification', 'IN'); //filtrer seulement les entreprises certifications = SE+)
    $custom_service->addWhereQuery ($query, $contacts_labelse, 'civicrm_contact', 'id', 'IN'); //filtrer seulement les entreprises certifications = SE+)
    $custom_query_service->orderBy ($query, 'civicrm_contact.organization_name', 'ASC', 2);
  }

  $get_filter_secteurs = $request->query->all();;
  if ($view->storage->get('id') == 'location_occasion_membres_associes_' && ($view->current_display == 'page_10_grue_tour') && $get_filter_secteurs) {
    $custom_service->joinTable($query, 'civicrm_contact', 'civicrm_value_phx_secteur', 'civicrm_value_phx_secteur', 'entity_id', 'id') ;

    //Filtrer par location montage reparation
    $custom_query_service->GrueATourFilterCheckboxes ($get_filter_secteurs, $query);

  }

  //old geographic page
  if ($view->storage->get('id') == 'entreprise_localisation' && ($view->current_display == 'page_2') ) {
    $view->setOffset(0);
    $view->getPager()->setItemsPerPage(400);
  }
  if ($view->storage->get('id') == 'entreprise_localisation' && ( $view->current_display == 'page_3') ) {
    $letter_alphabet = $request->query->get('letter');
    if ($letter_alphabet) {
      $custom_service->addWhereQuery ($query,   $letter_alphabet . '%', 'civicrm_contact', 'organization_name', 'like');
    }
  }

  //Page Location
  if ($view->storage->get('id') == 'location_occasion_membres_associes_' && $view->current_display == 'page_1') {
    //  $custom_service->addWhereQuery ($query, 68, 'civicrm_value_phx_materiel', 'materiel_location', '=');
    $custom_service->joinTable($query, 'civicrm_contact', 'civicrm_group_contact', 'civicrm_group_contact', 'contact_id', 'id' );

    // $contacts_who_are_in_dynamic_group_page_location = $custom_service->getAllContactIDInGroupDyanmicByGroupID(ViewService::GROUP_ID_MEMBRE_ACTUEL_POUR_LES_CIBLES_SEULEMENT);
    // $custom_service->addWhereQuery ($query,   $contacts_who_are_in_dynamic_group_page_location, 'civicrm_contact', 'id', 'IN');
    // $custom_service->joinTable($query, 'civicrm_contact', 'civicrm_value_phx_secteur', 'civicrm_value_phx_secteur', 'entity_id', 'id' );
    // $custom_service->addWhereQuery ($query,   '1', 'civicrm_value_phx_secteur', 'phx_secteur_loueur', '='); // Secteur = Loueur OUI

  }

  $contacts_who_are_in_dynamic_group = $custom_service->getAllContactIDInGroupDyanmicByGroupID(ViewService::GROUP_ID_MEMBRE_ACTUEL_POUR_LES_CIBLES_SEULEMENT);
  $req_company_name = $request->get('organization_name');
  $req_by_region = $request->get('state_province_id');
  $req_by_department = $request->get('filter_by_deprtmt');
  $req_city = $request->get('city');

  //Page géographique filter
  if (($view->storage->get('id') == 'entreprise_localisation' && $view->current_display == 'block_7')) {


    //Filtrer par agence
    // $custom_service->addWhereQuery ($query, 'Cible', 'civicrm_contact_civicrm_address', 'contact_sub_type', '=');
     //$custom_service->addWhereQuery ($query, 'DLR (Membre actuel)', 'civicrm_tag_civicrm_entity_tag', 'name', '=');

    //if there is filter
    if ($req_company_name  || $req_by_region || $req_by_department) {

    }

   //Join table civicrm_membership filter by member Associé
   $definition = [
    'table' => 'civicrm_membership',
    'field' => 'contact_id',
    'left_table' => 'civicrm_contact_civicrm_address',
    'left_field' => 'id',
  ];
  $join = Drupal::service('plugin.manager.views.join')->createInstance('standard', $definition);
  $query->addRelationship('civicrm_contact_civicrm_address', $join,'civicrm_contact_civicrm_address');

 //$custom_service->joinTable($query, 'civicrm_contact_civicrm_address', 'civicrm_group_contact', 'civicrm_group_contact_alias', 'contact_id', 'id' );

 $custom_service->addWhereQuery ($query,   [1, 2, 3, 4], 'civicrm_contact_civicrm_address_1 ', 'membership_type_id', 'IN');

    // //Filtrer par type de contact organisation
     $custom_service->addWhereQuery ($query, 'Organization', 'civicrm_contact_civicrm_address', 'contact_type', '=');

     $custom_service->addWhereQuery ($query, 1, 'civicrm_address', 'is_primary', '=');
     $custom_service->addWhereQuery ($query, 1, 'contact_id_civicrm_contact', 'is_primary', '=');
     $does_company_has_acronym = $custom_service->doesCompanyHasAcronym();
    if ($req_company_name) {
      if (!empty($does_company_has_acronym) && !is_numeric($does_company_has_acronym[0]->nick_name)) {
        $custom_service->addWhereQuery ($query, "%$req_company_name%", 'civicrm_contact_civicrm_address', 'nick_name', 'LIKE');
      }else {
        $custom_service->searchByOrganizationNameOrLegalName ($query, 'civicrm_contact_civicrm_address' , $req_company_name);
      }
    }

     if ($req_by_region) {
      $custom_service->addWhereQuery ($query, $req_by_region, 'civicrm_address', 'state_province_id', '=');
    }

    if ($req_city) {
      $custom_service->addWhereQuery ($query, $req_city, 'civicrm_address', 'city', '=');
    }

    if ($req_by_department && ($req_by_department != 'All')) {
      $custom_service->addWhereQuery ($query, "$req_by_department%", 'civicrm_address', 'postal_code', 'LIKE');
    }

    if (empty(\Drupal::request()->query->all())) {
      $view->setOffset(0);
      $view->getPager()->setItemsPerPage(ViewService::PAGE_GEOGRAPHIC_LIMIT);
    }

  }

  //page geograpique carte
  if ($view->storage->get('id') == 'entreprise_localisation' && $view->current_display == 'page_3') {

    //Contact cible dlr membre standard actuel
    $id_contact_cibles_already_filtered = $custom_service->getAdherentMembreStandardActuel();

    //Contact Cible dlr membre associés
    $id_contact_cibles_membre_associe = $custom_service->getContactCibleMembreAssocies();

    //Les agences liées à des cibles DLR membres actuels
    $all_agence_id_linked_whith_cible_dlr = $custom_service->geographiqueGetAllAgencesLinkedWithCibleDlr();

    if ($all_agence_id_linked_whith_cible_dlr) {
        $all_agence_id_linked_whith_cible_dlr = array_unique(array_merge($all_agence_id_linked_whith_cible_dlr, $id_contact_cibles_already_filtered, $id_contact_cibles_membre_associe), SORT_REGULAR);
        $custom_service->addWhereQuery ($query, $all_agence_id_linked_whith_cible_dlr, 'civicrm_contact_civicrm_address', 'id', 'IN');
    }

    //filter by departement by select multiple
    if ($req_by_department && ($req_by_department != 'All')) {

      $conditions = [];
      foreach ($req_by_department as $department_id) {
        $conditions[] = [
            'field' => 'civicrm_address.postal_code',
            'value' => ''. trim($department_id) .'%',
            'operator' => 'LIKE',
        ];
      }


      $query->where[] =  [
        'conditions' => $conditions,
        'type' => 'OR',
      ];
    }

    if ($req_city) {
      $custom_service->addWhereQuery ($query, "%$req_city%", 'civicrm_address', 'city', 'LIKE');
    }

    if ($req_company_name) {
      $custom_service->addWhereQuery ($query, "%$req_company_name%", 'civicrm_contact_civicrm_address', 'organization_name', 'LIKE');
    }


    $view->getPager()->setItemsPerPage(3000); //set limit
  }


  //Page alter Geographique
  $custom_service = \Drupal::service('civicrm_view_phenix.view_services');
  if ($view->storage->get('id') == 'location_occasion_membres_associes_' && $view->current_display == 'liste_carte') {

    if ($req_city) {
      $custom_service->addWhereQuery ($query, '%' . $req_city . '%', 'contact_id_civicrm_contact', 'city', 'LIKE');
    }

    $get_query = $request->query;

    if (!empty($get_query->get('filter_by_deprtmt') && $get_query->get('filter_by_deprtmt') != 'All')) {
      $department_ids = $get_query->get('filter_by_deprtmt');

      //filter by departement by select multiple
      $conditions = [];
      foreach ($department_ids as $department_id) {
        $conditions[] = [
            'field' => 'contact_id_civicrm_contact.postal_code',
            'value' => ''. trim($department_id) .'%',
            'operator' => 'LIKE',
        ];
      }

      $query->where[] =  [
        'conditions' => $conditions,
        'type' => 'OR',
      ];

    }

    //Join table civicrm_membership filter by member Associé
    $definition = [
      'table' => 'civicrm_membership',
      'field' => 'contact_id',
      'left_table' => 'civicrm_contact',
      'left_field' => 'id',
    ];
    $join = Drupal::service('plugin.manager.views.join')->createInstance('standard', $definition);
    $query->addRelationship('civicrm_contact', $join,'civicrm_contact');

     //Contact cible dlr membre standard actuel
     $id_contact_cibles_already_filtered = $custom_service->getAdherentMembreStandardActuel();

     //Contact Cible dlr membre associés
     $id_contact_cibles_membre_associe = $custom_service->getContactCibleMembreAssocies();


     //Les agences liées à des cibles DLR membres actuels
     $all_agence_id_linked_whith_cible_dlr = $custom_service->geographiqueGetAllAgencesLinkedWithCibleDlr();

     if ($all_agence_id_linked_whith_cible_dlr) {
         $all_agence_id_linked_whith_cible_dlr = array_unique(array_merge($all_agence_id_linked_whith_cible_dlr, $id_contact_cibles_already_filtered, $id_contact_cibles_membre_associe), SORT_REGULAR);
         $custom_service->addWhereQuery ($query, $all_agence_id_linked_whith_cible_dlr, 'civicrm_contact', 'id', 'IN');
     }

    //sorting
    //$custom_query_service->orderBy ($query, 'contact_id_civicrm_contact.postal_code', 'ASC', 0);
    // $custom_query_service->orderBy ($query, 'contact_id_civicrm_contact.city', 'ASC', 1);
    $custom_query_service->orderBy ($query, 'civicrm_contact.organization_name', 'ASC', 2);

  }

  //Query alter page Alphabétique
  if ($view->storage->get('id') == 'location_occasion_membres_associes_' && $view->current_display == 'page_5') {
      $idscontact = $custom_service->getContactAlphabetique();

    // $custom_query_service->orderBy ($query, 'contact_id_civicrm_contact.postal_code', 'ASC', 0);
    // $custom_query_service->orderBy ($query, 'contact_id_civicrm_contact.city', 'ASC', 1);
   $custom_query_service->orderBy ($query, 'civicrm_contact.organization_name', 'ASC', 2);
    if ($idscontact) {
      $custom_service->addWhereQuery ($query, $idscontact, 'civicrm_contact', 'id', 'IN'); //type de contact 'Cible'
    }
  }

  if ($view->storage->get('id') == 'location_occasion_membres_associes_') {

      $latitude = $view->exposed_data['geo_code_1'];
      $longitude = $view->exposed_data['geo_code_2'];
      \Drupal::service('page_cache_kill_switch')->trigger();

      //Page location, if in the url there is materiel_location_new and materiel_location, only filter by materiel_location
      if ($request->get('materiel_location_new') && $request->get('materiel_location')) {
        if (isset($query->where[1]) && isset($query->where[1]['conditions'])) {
          foreach ($query->where[1]['conditions'] as $key => $where) {
            if (strpos($where['field'], 'civicrm_value_phx_materiel.materiel_location') !== false) {
              unset($query->where[1]['conditions'][1]);
              break;
            }
          }
        }
      }

      $req_get = \Drupal::request()->query;
      if ($req_get) {
        $nick_name = $request->query->get('organization_name');
        $letter_alphabet = $request->query->get('letter');

        if ($letter_alphabet !== null) {
          if ($letter_alphabet == "009") {
            foreach (range('A', 'Z') as $custom_letter) {
              $custom_service->addWhereQuery ($query,  $custom_letter . '%', 'civicrm_contact', 'organization_name', 'not like');
            }
          }else {
            $custom_service->addWhereQuery ($query,  $letter_alphabet . '%', 'civicrm_contact', 'organization_name', 'like');
          }
        }

        //Sigle
         if (Drupal::request()->query->get('organization_name')) {

          //query behind
          $database = \Drupal::database();
          $organisation_name = $request->query->get('organization_name');
          $query_get_acronym = $database->query("SELECT nick_name FROM civicrm_contact where nick_name = '" . $organisation_name . "'")->fetchAll();

          if (!empty($query_get_acronym) && !is_numeric($query_get_acronym[0]->nick_name)) {
            $custom_service->addWhereQuery ($query, "%$organisation_name%", 'civicrm_contact', 'nick_name', 'LIKE');
          }else {
            $custom_service->searchByOrganizationNameOrLegalName ($query, 'civicrm_contact', $organisation_name);
          }
         }
    }

    //Filter table list in geographic page
    if ($view->current_display  == 'geographique') {
      if($req_get && $req_get->get('departement')) {
          $custom_service->addWhereQuery ($query, $req_get->get('departement') . '%', 'contact_id_civicrm_contact', 'postal_code', 'LIKE');
      }
    }
  }

  //Company sheet only display the marker concerned (fiche entreprise)
   if (($view->storage->get('id') == 'entreprise_localisation') &&  ($view->current_display == 'block_5')) {


    $current_contact_id = $request->get('arg_0');
    // $current_contact_id = $custom_service->decryptString($current_contact_id);
    $relationships = civicrm_api3('Relationship', 'get', [
      'contact_id_b' => $current_contact_id,
      'contact_id_a.contact_type' => "Organization",
      'is_active' => 1,
     // 'relationship_type_id' => $relationship_type_id,
      'return' => ['id', 'contact_id_a', 'relationship_type_id.name_a_b', 'geo_code_1', 'geo_code_2'],
      'option.limit' => 0,
      'option.sort' => 'contact_id_a.display_name',
    ]);


    if ($result = $relationships) {
      $result = $result['values'];
      $agences = array_column($result, 'contact_id_a');
      $agences[] = $request->get('arg_0');
       $query->where[1]['conditions'][] = [
        'field' => 'civicrm_address.contact_id' ,
        'value' =>  $agences,
        'operator' => 'IN',
      ];
    }else {
      $query->where[1]['conditions'][] = [
        'field' => 'civicrm_address.contact_id' ,
        'value' =>  $current_contact_id,
        'operator' => '=',
      ];
    }

  }


  if (($view->storage->get('id') == 'entreprise_localisation') &&  ($view->current_display == 'page_2')) {

    if($request && $request->get('organization_name')) {
      $org_name = $request->get('organization_name');
      $get_id_by_nick_name = \Drupal::database()->query("SELECT id FROM civicrm_contact WHERE organization_name LIKE '%". $org_name ."%' ");
      $get_id_by_nick_name = $get_id_by_nick_name->fetch() ? $get_id_by_nick_name->fetch()->id : '';

      //Now get latitude by contact_id
      $latitude = civicrm_api4('Address', 'get', [
        'select' => [
          'geo_code_1',
        ],
        'where' => [
          ['contact_id', '=', $get_id_by_nick_name],
        ],
      ]);
      \Drupal::service('civicrm_view_phenix.view_services')->addWhereQuery ($query, $latitude->first()['geo_code_1'], 'civicrm_address', 'geo_code_1', '=');
      //$custom_service->addWhereQuery ($query, '%cgl%', 'civicrm_contact_civicrm_address', 'nick_name', 'LIKE');
    }
  }
}

function custom_query_condition ($query, $longitude, $field) {
  $query->where[1]['conditions'][] = [
      'field' => 'civicrm_address.' . $field,
      'value' =>  $longitude,
      'operator' => '=',
    ];
}

/**
 * Implements hook_preprocess_page().
 */
function civicrm_view_phenix_preprocess_page(&$variables)
{
  $request = \Drupal::request();
  $variables['#attached']['library'][] = 'civicrm_view_phenix/civicrm_view_phenix';

}

function civicrm_view_phenix_preprocess_html(&$variables) {
  $req = \Drupal::request();
  $current_path = \Drupal::service('path.current')->getPath();

  $current_uri = $req->getRequestUri();
  $host = $req->getHost();

  // ANNUAIRE

  if (strpos($current_path, '/annuaire') !== false) {

    if (strpos($current_path, '/annuaire/grues_a_tour') !== false) {
      $variables['head_title'] = [t('Grues à Tour' . ViewService::TITTLE_SITE)];
    }

    if (strpos($current_path, '/annuaire/location') !== false) {
      $variables['head_title'] = [t('Location de matériel de chantier' . ViewService::TITTLE_SITE)];
    }

    if (strpos($current_path, '/annuaire/table-liste-géographique') !== false) {
      $variables['head_title'] = [t('Carte géographique ' . ViewService::TITTLE_SITE)];
    }

    if (strpos($current_path, '/annuaire/reparation') !== false) {
      $variables['head_title'] = [t('Réparation de matériel de chantier ' . ViewService::TITTLE_SITE)];
    }

    if (strpos($current_path, '/annuaire/alphabetique') !== false) {
      $variables['head_title'] = [t('Toutes les entreprises ' . ViewService::TITTLE_SITE)];
    }

    if (strpos($current_path, '/annuaire/Label_SE') !== false) {
      $variables['head_title'] = [t('Entreprises labellisées SE+' . ViewService::TITTLE_SITE)];
    }

    if (strpos($current_path, '/annuaire/membres-associes') !== false) {
      $variables['head_title'] = [t('Membres associés' . ViewService::TITTLE_SITE)];
    }
  }
}

/**
 * Alter pager link
 *
 * implement hook_preprocess_pager()
 *
 * @param [type] $variables
 * @return void
 */
function civicrm_view_phenix_preprocess_pager(&$variables) {
  $current_path = \Drupal::service('path.current')->getPath();
  $white_list_alter_pager = ['/annuaire/location', '/annuaire/occasion', '/annuaire/table-liste-géographique'];

  if (in_array($current_path, $white_list_alter_pager )) {
    foreach ($variables['items']['pages'] as &$page_link) {
      $page = str_replace("organization_name=&", '', $page_link['href']);
      $page = str_replace("subfamily=&", '', $page);
      $page = str_replace("city=&", '', $page);
      $page_link['href'] = $page;
    }
  }
}

 function civicrm_view_phenix_form_views_exposed_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $custom_service = \Drupal::service('civicrm_view_phenix.view_services');
  $request = \Drupal::request();

  if ($form['#id'] == 'views-exposed-form-location-occasion-membres-associes--page-1') {
    unset($form['materiel_location']['#options'][30]);
    unset($form['materiel_location']['#options'][41]);
    unset($form['materiel_location']['#options'][7]);
    unset($form['materiel_location']['#options'][9]);
    unset($form['materiel_location']['#options'][45]);
    $form['materiel_location_new']['#attributes']['data-subfamily'] = json_encode($custom_service->sousFamille());
    $form['materiel_location_new']['#attributes']['class'][] = 'all-data-subfamily';
    $form['actions']['submit']['#attributes']['class'][] = 'exposed-filter-location-btn';
    $form['actions']['submit']['#attributes']['data-sub-family'] = json_encode($custom_service->sousFamille());
  }

  if ($form['#id'] == 'views-exposed-form-location-occasion-membres-associes--page-2') {
    //do something here
    $form['marque_nom']['#attributes']['class'][] = 'hide marquenomtes';
  }
if ($form['#id'] == 'views-exposed-form-location-occasion-membres-associes--liste-carte') {

  //hide filter by "materiel location"
  $form['materiel_location']['#attributes']['class'][] = 'hide';
  $form['materiel_location']['#attributes']['name'] = '';

  //filter by departement

  $req_filter_by_departement = $request->get('filter_by_deprtmt');
  // dump( $req_filter_by_departement );
  $form['filter_by_dprtmt'] = [
    '#type' => 'select',
    '#title' => t('Filtrer par département'),
    '#attributes' => [
      'class' => ['filter_by_dprtmt'],
      // 'data-bef-auto-submit-exclude' => "1"
    ],
    '#options' => \Drupal::service('civicrm_view_phenix.view_services')->allDepartment(),
    '#name' => 'filter_by_deprtmt',
    '#value' => $req_filter_by_departement,
    '#weight' => 0,
    '#multiple' => true,
    '#size' => 10,
  ];

}

  /* Custom reset button */

  $white_list_form_id = ['views-exposed-form-location-occasion-membres-associes--liste-carte', 'views-exposed-form-location-occasion-membres-associes--page-1'];
  if (in_array($form['#id'], $white_list_form_id)) {
    $current_path = \Drupal::service('path.current')->getPath();
    // dump($form);
    $form['actions']['submit']['#suffix']  = '<a href="' . $current_path . '" data-var="/annuaire/reparation" class="custom-reset-btn button js-form-submit form-submit">Réinitialiser</a>';
  }

  //change input to autocomplete
  if ($form['#id'] == 'views-exposed-form-location-occasion-membres-associes--page-2') {
    $form['materiel_occasion']['#weight'] = 1;
    $form['marque_nom_copy'] = [
      '#type' => 'textfield',
      '#title' => 'Marques de matériel neuf ',
      '#autocomplete_route_name' => 'civicrm_view_phenix.autocomplete.name',
      '#attributes' => ['class' => ['marque-nom-copy'], ['size' => 10]],
      '#weight' => 0,
    ];

    $current_path = \Drupal::service('path.current')->getPath();
    // $form['marque_nom']['#attributes']['class'][] = 'hidden';

    $form['actions']['submit']['#attributes']['class'][] = 'custom-submit-btn hide';
    $form['materiel_occasion']['#suffix'] = '<a class="button filter-by-brand">Rechercher</a><a href="' . $current_path . '" data-var="/annuaire/reparation" class="custom-reset-btn 55555 button js-form-submit form-submit">Réinitialiser</a>

    ';

  }

  $form_white_list = [
    'views-exposed-form-location-occasion-membres-associes--page-2', 'views-exposed-form-location-occasion-membres-associes--page-1', 'views-exposed-form-location-occasion-membres-associes--liste-carte'
   ];

  if(in_array($form['#id'], $form_white_list)) {
    $form['header']['organization_name'] = [
      '#type' => 'textfield',
      '#title' => t('Rechercher une entreprise'),
      '#attributes' => [
        'class' => ['filter_by_name'],
        'data-bef-auto-submit-exclude' => "1"

      ],
      '#name' => 'organization_name',
      'data-bef-auto-submit-exclude' => "1"
    ];

    $form['header']['#weight'] = -100;

  }

  if ($form['#id'] == 'views-exposed-form-location-occasion-membres-associes--page-1') {

    //custom filter autocomplete
    /*  $form['subfamily'] = [
      '#title'      => t('Sous famille'),
      '#type'       => 'textfield',
      '#multiple' => true,
      '#autocomplete_route_name' => 'civicrm_view_phenix.autocomplete.sous.famille',
      '#attributes' => [
        'class' => [
          'filter-by-subfamily'
        ]

        ],
      '#weight' => -20
    ];  */

    $form['materiel_location_new']['#attributes']['class'][] = 'ul-parent-materiel-location';
    $form['materiel_location']['#attributes']['class'][] = 'ul-child-materiel-location';

    $ul_parents =  $form['materiel_location_new']['#options'];
    $ul_child =  $form['materiel_location']['#options'];

    $allUl = [];
    //create ul li with switch loop
    foreach($ul_parents as $k => $li_parent) {
      switch ($k){
        case 1 : // ÉQUIPER / SÉCURISER UN SITE
          $whiteslist = [2,63,64,60,68,69,42,46,10,39,8,47,14,16,40,21,26,62,52];
          build_ul_to_append_in_filter_toggle($ul_child, 1, $whiteslist, $allUl);
          break;
        case 2 : // TRAVAILLER EN HAUTEUR / GRUTER
          $whiteslist = [46,10,39,21,26,13,15,48,17];
          build_ul_to_append_in_filter_toggle($ul_child, 2, $whiteslist, $allUl);
          break;
        case 3 : // TRAVAILLER LES SOLS
          $whiteslist = [2,63,64,60,16,26,3,6,76,12,11,18,19,23,50,22,27,28];
          build_ul_to_append_in_filter_toggle($ul_child, 3, $whiteslist, $allUl);
          break;
        case 4 :// PRODUIRE DE L’ÉNERGIE / DE L’AIR
          $whiteslist = [68,69,8,47,1,43];
          build_ul_to_append_in_filter_toggle($ul_child, 4, $whiteslist, $allUl);
          break;
        case 5 :  // CONSTRUIRE / ENTRETENIR / AMÉNAGER BÂTIMENT
          $whiteslist = [2,63,64,60,68,69,42,10,39,14,16,40,21,26,62,5,13,15,17,20,61,22,24,43,27,29,28];
          build_ul_to_append_in_filter_toggle($ul_child, 5, $whiteslist, $allUl);
          break;
        case 6 : // TRANSPORTER / MANUTENTIONNER
          $whiteslist = [46,65,66,67,4,5,75,13,15,48,50,27,49];
          build_ul_to_append_in_filter_toggle($ul_child, 6, $whiteslist, $allUl);
          break;
        case 7 : // ORGANISER UN ÉVÈNEMENT
          $whiteslist = [68,69,46,8,47,14,40,21,26,62,70,77,78,79,80,17,20];
          build_ul_to_append_in_filter_toggle($ul_child, 7, $whiteslist, $allUl);
          break;
        case 8 : // ENTRETENIR / AMÉNAGER LES ESPACES VERTS / AGRICOLES
          $whiteslist = [46,26,5,72,73,74,75,76,48,20,22,28];
          build_ul_to_append_in_filter_toggle($ul_child, 8, $whiteslist, $allUl);
          break;
        case 9 : // DÉMOLIR / RECYCLER
          $whiteslist = [46,39,16,62,52,44,17,20,51,22];
          build_ul_to_append_in_filter_toggle($ul_child, 9, $whiteslist, $allUl);
          break;
        case 10 : // S'ÉQUIPER EN OUTILS / ACCESSOIRES
          $whiteslist = [16,26,71,20,25,18,50,24,43];
          build_ul_to_append_in_filter_toggle($ul_child, 10, $whiteslist, $allUl);
          break;
        case 11 : // PROTÉGER L’ENVIRONNEMENT (?)
          $whiteslist = [40,21,62,52,20,19,51,49];
          build_ul_to_append_in_filter_toggle($ul_child, 11, $whiteslist, $allUl);
          break;
      }
    }
    $form['materiel_location_new']['#attributes']['data-all-ul'] = json_encode($allUl);
  }

}

/**
 * Implements hook_preprocess_views_view().
 */
function civicrm_view_phenix_preprocess_views_view(&$vars) {
  $view = $vars["view"];
  $custom_service = \Drupal::service('civicrm_view_phenix.view_services');
  $request = \Drupal::request();

  $logged_in_user = \Drupal::currentUser()->isAuthenticated();

  //Ne pas afficher la zone de texte si l'user n'est pas connecté
  if(($view->storage->id() == 'location_occasion_membres_associes_') && !$logged_in_user) {
    unset($vars['footer']['area']);
  }
  if(($view->storage->id() == 'location_occasion_membres_associes_') && ($view->current_display != 'geographique')) {
    $req = \Drupal::request();
   $generate_html = '<div class="a-z-block custom-bloc-a-to-z">';
   $current_path = \Drupal::service('path.current')->getPath();
   $current_uri = $req->getRequestUri();


   $query = parse_url($current_uri, PHP_URL_QUERY);

  if ($query) {
    if (strpos ($query, 'letter' ) !== false) {

      preg_match('/&letter=[a-zA-Z]/', $current_uri, $matches);

      if (!empty($matches)) {
        $previous_value = $matches[0];
        $current_uri = str_replace($previous_value, '', $current_uri);
      }
    }
  }

  /* Ajouter filtre "TOUT" et chiffre de 0 à 9   mettre aussi la total au dessus du filtre alphabetique */

  //check if there is a parameters
  $filterAllActive = '';
  if (strpos($current_uri,'?') === false) {
    $filterAllActive = 'filtre-tout-active';
  }

  $generate_html .= '<span>
  <a data-active-letter=" " data-current-uri="/annuaire/occasion" href="' . \Drupal::request()->getpathInfo() . '" class="filter-by-letter '. $filterAllActive .'">Tout</a>
</span>';

    //Filter by number
   $generate_html = \Drupal::service('civicrm_view_phenix.view_services')->numericFilter ($query, $generate_html);
   $generate_html = \Drupal::service('civicrm_view_phenix.view_services')->alphabeticFilter ($query, $generate_html);

   $generate_html .= '</div>';
   $vars['header']['#markup'] = $generate_html;
  }

    //for the alphabetic menu
    if ($view->storage->get('id') == 'publicite_node') {
      $current_uri = \Drupal::request()->getRequestUri();
      $current_path = \Drupal::service('path.current')->getPath();
      $white_list_to_add_form_filter = ['/annuaire/geographique', '/annuaire/reparation', '/annuaire/alphabetique', '/annuaire/grues_a_tour', '/annuaire/membres-associes', '/annuaire/Label_SE'];
      if (in_array($current_path, $white_list_to_add_form_filter)) {
        $vars['header']['organization_name'] = [
          '#type' => 'textfield',
          '#title' => t('Rechercher une entreprise'),
          '#attributes' => [
            'class' => ['filter_by_name'],
            'data-bef-auto-submit-exclude' => "1"
          ],
          '#name' => 'organization_name',
          'data-bef-auto-submit-exclude' => "1"
        ];

        
        if ($current_path == '/annuaire/alphabetique') {
          $vars['header']['contact_us_markup'] = [
            '#type' => 'button',
            '#value' => 'Rechercher',
          ];
        }

        if ($current_path == '/annuaire/grues_a_tour') {
          $location_filter = $request->get('loc');
          $montage_filter = $request->get('montage');
          $reparation_filter = $request->get('reparation');

          $vars['#cache']['max-age'] = 0;
          \Drupal::service('page_cache_kill_switch')->trigger();

           $vars['header']['filter_location'] = [
            '#id' => 'loc',
            '#type' => 'checkbox',
            '#title' => 'Location',
            '#description' => 'loc',
            '#attributes' => [
            ]
           ];


           $vars['header']['filter_montage'] = [
            '#id' => 'montage',
            '#type' => 'checkbox',
            '#title' => 'Montage',
            '#description' => 'montage',
            '#attributes' => [
            ]
           ];


           $vars['header']['filter_reparation'] = [
            '#id' => 'reparation',
            '#type' => 'checkbox',
            '#title' => 'Réparation',
            '#description' => 'reparation',
            '#attributes' => [
            ]
           ];

           $vars['header']['submit'] = array(
            '#type' => 'submit',
            '#value' => 'Rechercher',
            '#attributes' => ['class' => ['btn-filter-by-loc']]
          );
        }

        $current_uri = \Drupal::request()->getRequestUri();
        $current_path = \Drupal::service('path.current')->getPath();

        if (in_array($current_path, ['/annuaire/reparation', '/annuaire/alphabetique', '/annuaire/grues_a_tour', '/annuaire/membres-associes', '/annuaire/Label_SE'])) {
          $vars['header']['reset']['#markup'] = '<a href="' . $current_path . '" data-var="/annuaire/reparation" class=" button js-form-submit form-submit">Réinitialiser</a>';
        }
      }
    }

    if ($view->storage->id() == 'fiche' && ($view->current_display == 'page_2')) {
      $contact_id = \Drupal::request()->attributes->get('arg_0');
      $contact_id = $custom_service->decryptString($contact_id);
       $entity = $view->result[0]->_entity;
      $legal_name = $custom_service->getNodeFieldValue($entity, 'legal_name');
      $view->element['view_build']['#title']['#markup'] = $legal_name;
    }

    if ($view->storage->id() == 'location_occasion_membres_associes_' && ($view->current_display == 'liste_carte')) {
      if (empty($view->result)) {
        $vars['header']['submit']['#suffix'] = '<span style="padding-left: 60px">Aucun résultat pour cette recherche.</span>';
      }
      $zone_text = '<div class="legende-logo"><i class=\'fas fa-city pr-8 \'></i> <span class="masoc legende-siege"> Siège</span>
      <i class=\'far fa-building pr-12 \'></i> <span class="labelize legende-agence"> Agence</span></div>';
      $vars['header'][] = [
        '#markup' => $zone_text,
        '#allowed_tags' => ['p', 'img', 'span', 'i', 'svg'], // Specify the allowed HTML tags if needed.,
        '#weight' => -1
      ];
    }

}

function civicrm_view_phenix_theme($existing, $type, $theme, $path)
{
 /*  return [
    'civicrm_view_phenix_filter_by_location_reparation_montage' => [
      'variables' => [
        'content' => Null,
      ],
      'render element' => 'children',
      'path' => $path . '/templates',
      'template' => 'civicrm-view-phenix-filter-by-location-reparation-montage'
    ],
  ]; */
}

function civicrm_view_phenix_reset($form, &$form_state) {
  $form_state['rebuild'] = FALSE;
}


/**
 *
 * implement hoo_view_pre_render()
 *
 * @param Drupal\views\ViewExecutable $view
 * @return void
 */
function civicrm_view_phenix_views_pre_render(Drupal\views\ViewExecutable  $view) {
  $request = \Drupal::request();
  $custom_service = \Drupal::service('civicrm_view_phenix.view_services');
  if ($view->storage->id() == 'fiche' && ($view->current_display == 'page_2')) {
    //dans la fiche, si le contact s'affiche plusieurs fois (qui se repete)
    if (count($view->result) > 1) {
      // Loop through the array
      foreach ($view->result as $key => $value) {
        // Check if the value is greater than 1
        if ($value->index > 0) {
          // Unset the element
          unset($view->result[$key]);
        }
      }
    }
  }

  // $view->query->displayHandler->handlers['header']['result']->options['#suffix'] = '<p>tmqlskdjfjf</p>';
  //alter total display

  $plural = count($view->result) > 1 ? 's' : '';
  if ($view->storage->get('id') == 'location_occasion_membres_associes_' ) {
    $view->query->displayHandler->handlers['header']['result']->options['content'] =   '<p class="custom-total checking"> @total  entreprise' . $plural . ' </p>';
  }

  //Page location - display "sous-famille" filter next to the total
  if ($view->storage->get('id') == 'location_occasion_membres_associes_' && $view->current_display == 'page_1') {
     $current_filter = $request->get('materiel_location');
     $sub_family = $custom_service->sousFamille();
     if ($current_filter) {

      $sub_family_filter = $sub_family[$current_filter];
       $view->query->displayHandler->handlers['header']['result']->options['content'] =   '<p class="custom-total"> @total entreprises - ' . $sub_family_filter .'</p>';
      }

    }


  if ($view->storage->get('id') == 'location_occasion_membres_associes_' && $view->current_display == 'liste_carte') {
    //dump($view->result);
  }

  //page alphabetique
  if ($view->storage->get('id') == 'location_occasion_membres_associes_' && $view->current_display == 'page_5') {
    $unique_uuids = $new_view_result = [];
    $new_row_index = 0;
    $curr_id = 0;
    foreach ($view->result as $key =>  $row) {
      if ($curr_id  == $row->id) {
        unset($view->result[$key]);
      }

      $curr_id = $row->id;
      // Use UUID so this works for all entities
      $uuid = $row->_entity->uuid();
    }

  }
}

function civicrm_view_phenix_views_pre_view(Drupal\views\ViewExecutable $view, $display_id, array &$args) {

  $custom_service = \Drupal::service('civicrm_view_phenix.view_services');
  $db = \Drupal::database();
  //On n'affiche pas la page si ce n'est pas un adhérent
  if (($view->id() == 'fiche') && ($display_id == 'page_2')) {

    $contact_id = \Drupal::request()->attributes->get('arg_0');
    // redirection si quelqu'un tente de modifier à la main le token au niveau de l'url
    $get_token = \Drupal::request()->query->get('token');
    $decrypted_token = $custom_service->decryptString($get_token);

    if (!$decrypted_token) {
      $custom_service->redirectHomePage();
    }

    $view->args[0] = $contact_id;
    $isAnnuaire = $db->query('select * from civicrm_value_phx_org_annuaireenligne where entity_id = ' . $contact_id)->fetch()->org_annuaireenligne_DLR;
    $token_get = \Drupal::request()->get('token');
    $descripted_token = $custom_service->decryptString('32f0c8a4aae9d7fdf791556e14aa4c07152f274df9945e6a6c4b5f98adbfffd88cf6');

    if (!$isAnnuaire) {
      // throw new Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException();
      $response = new \Symfony\Component\HttpFoundation\RedirectResponse(Drupal\Core\Url::fromRoute('<front>')->toString());
      $response->send();
    }
  }

  if ($view->id() == 'publicite') {
    $view->element['#attributes']['class'][] = 'block-view-publicite';
  }

  //adding footer text
  if ($view->id() == 'entreprise_localisation' && $display_id === 'block_7') {
    if (empty(\Drupal::request()->query->all())) {
      $view->element['#attributes']['class'][] = 'view-map-cutom-class hidden';
    }
  }

  if ($view->id() == 'location_occasion_membres_associes_' && $display_id === 'liste_carte') {
    $all_request = \Drupal::request()->query->all();
    $current_url_request = \Drupal::request()->getRequestUri();
    if (!empty($all_request)) {
      $exploded_url = explode('graphique?', $current_url_request);

      $options = array(
        'id' => 'area_text_custom',
        'table' => 'views',
        'field' => 'area_text_custom',
        'relationship' => 'none',
        'group_type' => 'none',
        'admin_label' => '',
        'empty' => TRUE,
        'tokenize' => FALSE,
        'content' => '<a href="/annuaire/geographique/carte?' . $exploded_url[1] . '" class="see-the-map button js-form-submit form-submit">Voir la carte</a>',
        'plugin_id' => 'text_custom',
      );
      $view->setHandler('liste_carte', 'header', 'area_text_custom', $options);
    }

  }
}


/**
 * creation des ul li pour etre ajouté au filtre
 * (search by type of activity)
 */
function build_ul_to_append_in_filter_toggle($ul_child, $id, $whiteslist, &$allUl) {
  $each_ul = '<ul class="toggle-sub-materiel">';
  foreach($ul_child as $key => $li_child) {
    if (in_array($key, $whiteslist)) {
      $each_ul .= '<li data-val="' . $key . '"><a data-id="' . $id . '" href="?materiel_location_new=' . $id . '&materiel_location=' . $key . '">' . $li_child . '</a></li>';
    }
  }

  $each_ul .= '</ul>';
  $allUl["materiel_location_new[" . $id . "]"] =  $each_ul;
  return $allUl;
}




 function civicrm_view_phenix_query_alter( &$query) {
  $current_path = \Drupal::service('path.current')->getPath();

   if(($query->alterTags['views_entreprise_localisation'] == 1 ) && (strpos($current_path, '/annuaire/details/') === false)) {//Page Voir la carte
      $query->groupBy("civicrm_address.id");
      $query->groupBy("civicrm_contact_civicrm_address.id");
      $query->groupBy("contact_id_civicrm_contact.id");
   }
   if($query->alterTags['views_location_occasion_membres_associes_'] == 1 &&
    (!array_key_exists('civicrm_contact_civicrm_value_phx_Individual_contact_fonction', $query->getTables()))){  //All views
       $query->groupBy("contact_id_civicrm_contact.id");
       $query->groupBy("contact_id_civicrm_contact_1.id");
       $query->groupBy("civicrm_contact.id");
       $query->groupBy("civicrm_contact.legal_name");
       $query->groupBy("contact_id_civicrm_contact.city");
     //also you can unset other group by critera by using, unset($query->getGroupBy());
  }

}

/**
 * @param $variables
 */
function civicrm_view_phenix_preprocess_menu(&$variables){
  if ($variables['menu_name'] == 'guide') {

  }
}

 /**
 * Implements hook_webform_element_alter().
 */
function civicrm_view_phenix_webform_element_alter(array &$element, \Drupal\Core\Form\FormStateInterface $form_state, array $context) {
  if ($form_state->getBuildInfo()['form_id'] == 'webform_submission_demande_effectifs_phenix_v2_test_form') {

  }
}

/**
 * Implements hook_node_access().
 */
function civicrm_view_phenix_node_access(NodeInterface $node, $op, AccountInterface $account) {
  $domain = \Drupal::request()->getHost();
  $currentUrl = \Drupal::request()->getRequestUri();
  $domain = \Drupal::request()->getHost();

  // les rubriques de l'annuaire DLR qui doivent etre accessibles aux visiteurs anonymes ?
  //Parmis les node de type "page de base" il y a ce qui sont privé et public, donc pour ces nodes là sont publics
  // Add the node IDs here.
  // liste  des nodes avec leur nom ou title
  //par exemple le node/611 = /annuaire (la homepage) , node/607 ==> ARGUS CHARIOTS 2 horizontal
  //node/407 ==> plan d'acces, node/408 => politique de confidentialité
  $allowed_node_ids = [611, 607, 131, 409, 407, 408];

  if ($account->isAnonymous()) {
    // Si c'est une des rubriques autorisées, en mode lecture, et qu'on est sur un domaine de l'annuaire DLR (pas sur extranet.dlr.fr)
    if (in_array($node->id(), $allowed_node_ids) && $op == 'view') {

      //autoriser l'acces aux rubriques
      return AccessResult::allowed();
    }

    // Default behavior for other nodes and operations.
    //sinon ne pas donner acces
    return AccessResult::forbidden();
  }

  return null;
}

/**
 * Implements hook_taxonomy_term_access().
 * Pour la page annuaire Si c'est un utilisateur anonyme et que c'est la page des taxonomies on redirige vers la page d'accueil
 * 
 */
function civicrm_view_phenix_taxonomy_term_access(TermInterface $term, $operation, AccountInterface $account) {
  // Si l'utilisateur est anonyme
  if ($account->isAnonymous()) {
    // Si l'opération est 'view', redirigez vers la page d'accueil
    if ($operation === 'view') {
      $url = Url::fromRoute('<front>')->toString();
      $response = new Symfony\Component\HttpFoundation\RedirectResponse($url);
      $response->send();
      return AccessResult::forbidden()->setCacheMaxAge(0);
    }
    // Pour toutes les autres opérations, refusez l'accès
    return AccessResult::forbidden()->setCacheMaxAge(0);
  }

  // Pour les utilisateurs authentifiés, ne modifiez pas l'accès par défaut
  return AccessResult::neutral();
}


/**
 * Implements hook_form_alter().
 * ça sert à mettre par default les nodes de type publicité à www_annuairedlr_fr
 * et à modifier aussi le label du bouton envoyer de la page reinitialisation du mot de passe 
 */
function civicrm_view_phenix_form_alter (&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if ($form['#id'] == 'user-pass') {
    $form['actions']['submit']['#value'] = t('Envoyer');
  }
  if ($form['#id'] == 'node-publicite-form' ) {
    $form['field_domain_access']['widget']['#default_value'] = [
      2 => "www_annuairedlr_fr"
    ];
  }
}

use Drupal\Core\Block\BlockPluginInterface;
/**
 *
 * Implements hook_block_view_alter().
 *
 * Pour Quantis
 *
 */
function civicrm_view_phenix_block_view_alter(array &$build, BlockPluginInterface $block) {
  // Check if the block is the one you want to modify.
  if (in_array($block->getPluginId(), ['block_content:a662a6e5-2282-4ab8-a6e7-325d8c06e702', 'block_content:0095fb9a-22b7-4db9-af71-2cd9bca0885a'])) {
    // Get the current user object.
    $custom_service = \Drupal::service('civicrm_view_phenix.view_services');
    $custom_service->generateUlrMarketPlace($build);
  }
}

/*
Usha ajout 3 aout 2024 :
eviter les url avec parametres récursifs du genre :
/annuaire/table-liste-g%C3%A9ographique?0=1=2=3=4=5=6=7=8=9=10=11=12=13=14=15=16=17=18=19=20=21=22=23=24=25=26=27=28=29=30=31=32=33=34=35=36=37=38=39=40=41=42=43=44=45=46=47=48=49=50=51=52=53=54=55=56=57=58=59=60=61=62=63=64=65=66=67=68=69=70=71=72=73=74=75=76=77=78=79=80=81=82=83=84=85=86=87=88=89=90=91=92=93=94=95=96=97=98=99=100=101=102=103=104=105=106=107=108=109=110=111=112=113=114=115=116=117=118=119=120=121=122=123=124=125=126=127=128=129=130=131=132=133=134=135=136=137=138=139=140=141=142=143=144=145=146=147=148=149=150=151=152=153=154=155=156=157=158=159=160=161=162=163=164=165=166=167=168=169=170=171=172=173=174=175=176=177=178=179=180=181=182=183=184=185=186=187=188=189=190=191=192=193=194=195=196=197=198=199=200=201=202=203=204=205=206=207=208=209=210=211=212=213=214=215=216=217=218=219=220=221=222=223=224=225=226=227=228=229=230=231=232=233=234=235=236=237=238=239=240=241=242=243=244=245=246=247=248=249=250=251=252=253=254=255=page=4&-9&letter=C

Avec ce code :
/annuaire/location?-9&-9&-9-9-90011230123&letter=E&materiel_location_new=8
Résultat : /annuaire/location?letter=E&materiel_location_new=8
/annuaire/location?materiel_location=42materiel_location_new%3D9-9%3D-9%3Dmateriel_location_new%3D6-9materiel_location_new%3D10-9%3Dmateriel_location_new%3D10-9%3D-9%3D&-9=&materiel_location_new=6&&&letter=X
Résultat : /annuaire/location?materiel_location=42&materiel_location_new=6&letter=X
/annuaire/details/24769?addressId=222&token=cdd652f903a63235f5b5c495ce11dcf06e7b9e3f1070459485e227aec2f73fdd
Résultat : /annuaire/details/24769?addressId=222&token=cdd652f903a63235f5b5c495ce11dcf06e7b9e3f1070459485e227aec2f73fdd
/annuaire/details/24732?addressId=347&token=95db50afeb179dfbcdf15b3eaba830b757c5a14a9c79d270351ce58f84ca1d59
Résultat : /annuaire/details/24732?addressId=347&token=95db50afeb179dfbcdf15b3eaba830b757c5a14a9c79d270351ce58f84ca1d59
/annuaire/details/22064?addressId=8314&token=42b1d20be9b4f2ed76386a6f9795b025b23e5d18f27e4f903396f7b68561bf02
Résultat : /annuaire/details/22064?addressId=8314&token=42b1d20be9b4f2ed76386a6f9795b025b23e5d18f27e4f903396f7b68561bf02
/annuaire/details/20995?addressId=12078&token=e9edc1ba209afeb57c36bb5a27cce14e2c44e3d9e16f7e13ab023b9df05510f7
Résultat : /annuaire/details/20995?addressId=12078&token=e9edc1ba209afeb57c36bb5a27cce14e2c44e3d9e16f7e13ab023b9df05510f7
/annuaire/details/20892?addressId=12828&token=22ff03751f1e6909a3eeaca9174e54cded1676d4d4ba324ca834ac93da87540e
Résultat : /annuaire/details/20892?addressId=12828&token=22ff03751f1e6909a3eeaca9174e54cded1676d4d4ba324ca834ac93da87540e
/annuaire/alphabetique?-9&-9&0&1&2&3&letter=Y&page=2
Résultat : /annuaire/alphabetique?letter=Y&page=2

*/

function civicrm_view_phenix_outbound_alter(&$path, &$options, $original_path) {
  // Vérifier si le chemin commence par "/annuaire"
  if (strpos($path, '/annuaire') === 0) {
    parse_str($options['query'], $query);

    // Nettoyer les paramètres récursifs
    $cleaned_query = [];
    foreach ($query as $key => $value) {
      // Supprimer les paramètres qui commencent par "-9" ou "&" suivi d'un chiffre
      if (!preg_match('/^(-9|&\d+)/', $key)) {
        // Nettoyer la clé et la valeur du paramètre
        $cleaned_key = preg_replace('/[^a-zA-Z0-9_]/', '', $key);
        $cleaned_value = preg_replace('/[^a-zA-Z0-9,_=-]/', '', $value);
        $cleaned_query[$cleaned_key] = $cleaned_value;
      }
    }

    // Reconstruire l'URL propre
    $path = strtok($path, '?');
    if (!empty($cleaned_query)) {  // Utiliser $cleaned_query au lieu de $query
      $path .= '?' . http_build_query($cleaned_query);
    }
  }
}
